//BUBBLE short
// compare consecutive elements
// after first pass you get largest element at end of array



#include <stdio.h>

// void swap(int *xp, int *yp)
// {
//     int temp = *xp;
//     *xp = *yp;
//     *yp = temp;
// }
  
// An optimized version of Bubble Sort
// void bubbleSort(int arr[], int n)
// {
//   int i, j;
//   bool swapped;
//   for (i = 0; i < n-1; i++)
//   {
//      swapped = false;
//      for (j = 0; j < n-i-1; j++)
//      {
//         if (arr[j] > arr[j+1])
//         {
//           swap(&arr[j], &arr[j+1]);
//           swapped = true;
//         }
//      }
  
//      IF no two elements were swapped by inner loop, then break
//      if (swapped == false)
//         break;
//   }
// }

void bubblesort(int a[], int n){
    int temp, flag=0;

    for(int i=0;i<n;i++){
	flag=0
        for(int j=0;j<n-1-i;j++){
            if(a[j]>a[j+1]){
                temp = a[j];
                a[j] = a[j+1];
                a[j+1] = temp;
		flag=1;
            }
        }
	if(flag==0){
		break;
	}
    }
    
    for(int i=0;i<n;i++){
        printf("%d ",a[i]);
    }
}


int main(){
    int a[]={5,4,3,2,1};
    int n = sizeof(a)/sizeof(a[0]);
    
    bubblesort(a,n);
}